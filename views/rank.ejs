<!DOCTYPE html>
<html dir="ltr" lang="en-US">
<% include ./partials/head %>

<body>
<div class="container">
  <div class="description z-depth-2">  <p><%= description %></p></div>

  <div class="content">
    <form id="sugarList2" method="post" action="<%= action %>">
      <input id="facebook_id" type="hidden" name='fb_id'>
      <div id="top-rank" class="sugarbutton-rank">
        <label>
          <span style="color: white;"><%= Hrank %></span>
        </label>
      </div>
      <div id="rankinglist" class="list-group">

        <% for(var i=0; i<list.length; i++) {%>
            <div class="sugarbutton-rank re-order list-group-item">
              <label>
                <input type="hidden" name='<%= list[i] %>'><span><%= list[i] %></span>
              </label>
            </div>
        <% } %>

      </div>
      <div id="low-rank" class="sugarbutton-rank">
        <label>
          <span style="color: white;"><%= Lrank %></span>
        </label>
      </div>

      <div id="<%= submit %>" class="fixed-action-btn">
        <a class="btn-floating btn-large blue z-depth-2">
          <i class="material-icons">done</i>
         </a>
     </div>
    </form>
  </div>
</div>
<script>

window.extAsyncInit = function() {
  var check = MessengerExtensions.isInExtension();
  console.log(check)
  if (check === false) {
    $("#facebook_id").val(<%= id %>)
  } else {
    MessengerExtensions.getUserID(function success(uids) {
         var psid = uids.psid.toString();
         $("#facebook_id").val(psid)
       }, function error(err) {

       });
  }
};

var iosDragDropShim = { enableEnterLeave: true }

// var dragSrcEl = null;
//
// function handleDragStart(e) {
//   this.style.opacity = '0.4';  // this / e.target is the source node.
//
//   dragSrcEl = this;
//
//   e.dataTransfer.effectAllowed = 'move';
//   e.dataTransfer.setData('text/html', this.innerHTML);
// }
// function handleDragOver(e) {
//   if (e.preventDefault) {
//     e.preventDefault(); // Necessary. Allows us to drop.
//   }
//
//   e.dataTransfer.dropEffect = 'move';  // See the section on the DataTransfer object.
//
//   return false;
// }
// function handleDragEnter(e) {
//   // this / e.target is the current hover target.
//   this.classList.add('over');
// }
//
// function handleDragLeave(e) {
//   this.classList.remove('over');  // this / e.target is previous target element.
// }
// function handleDrop(e) {
//   // this / e.target is current target element.
//
//   if (e.stopPropagation) {
//     e.stopPropagation(); // stops the browser from redirecting.
//   }
//
//   // Don't do anything if dropping the same column we're dragging.
//   if (dragSrcEl != this) {
//      // Set the source column's HTML to the HTML of the column we dropped on.
//     //  dragSrcEl.innerHTML = this.innerHTML;
//      //
//     //  this.innerHTML = e.dataTransfer.getData('text/html');
//   }
//
//   return false;
// }
// function handleDragEnd(e) {
//   // this/e.target is the source node.
//   this.style.opacity = '1';
//   [].forEach.call(rows, function (row) {
//     row.classList.remove('over');
//   });
// }
// var rows = document.querySelectorAll('#rankinglist .re-order');
// [].forEach.call(rows, function(row) {
//   row.addEventListener('dragstart', handleDragStart, false);
//   row.addEventListener('dragenter', handleDragEnter, false);
//   row.addEventListener('dragover', handleDragOver, false);
//   row.addEventListener('dragleave', handleDragLeave, false);
//   row.addEventListener('drop', handleDrop, false);
//   row.addEventListener('dragend', handleDragEnd, false);
// });

Sortable.create(rankinglist, {
  ghostClass: 'ghost', // or HTMLElement
 });


$('#submit').click(function (evt) {
  $.toast({
    text : "Got it! Loading next question...",
    showHideTransition : 'plain',     // It can be plain, fade or slide
    bgColor : '#1f93ff',              // Background color for toast
    textColor : 'white',              // text color
    allowToastClose : false,          // Show the close button or not
    hideAfter : false,                // `false` to make it sticky or time in miliseconds to hide after
    stack : false,                    // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once
    textAlign : 'left',               // Alignment of text i.e. left, right, center
    position : 'bottom-left'          // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page
  })
  window.setTimeout(toastSubmit, 1000)
});

function toastSubmit() {
  $('form').submit();
  evt.preventDefault();
}

$('#submit-final').click(function (evt) {
    $('form').submit();
    evt.preventDefault();
    MessengerExtensions.requestCloseBrowser(function success() {}, function error(err) {});
    setTimeout(function() {
          window.close();
    }, 1000);
});


</script>
<script src="/js/ios-drag-drop.js"></script>
</body>
